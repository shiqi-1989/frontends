{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-xml.js", "dep:ace-builds_src-noconflict_mode-xml_js"],
  "sourcesContent": ["ace.define(\"ace/mode/xml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar XmlHighlightRules = function(normalize) {\r\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\r\n\r\n    this.$rules = {\r\n        start : [\r\n            {token : \"string.cdata.xml\", regex : \"<\\\\!\\\\[CDATA\\\\[\", next : \"cdata\"},\r\n            {\r\n                token : [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\r\n                regex : \"(<\\\\?)(\" + tagRegex + \")\", next : \"processing_instruction\"\r\n            },\r\n            {token : \"comment.start.xml\", regex : \"<\\\\!--\", next : \"comment\"},\r\n            {\r\n                token : [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\r\n                regex : \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\", next : \"doctype\", caseInsensitive: true\r\n            },\r\n            {include : \"tag\"},\r\n            {token : \"text.end-tag-open.xml\", regex: \"</\"},\r\n            {token : \"text.tag-open.xml\", regex: \"<\"},\r\n            {include : \"reference\"},\r\n            {defaultToken : \"text.xml\"}\r\n        ],\r\n\r\n        processing_instruction : [{\r\n            token : \"entity.other.attribute-name.decl-attribute-name.xml\",\r\n            regex : tagRegex\r\n        }, {\r\n            token : \"keyword.operator.decl-attribute-equals.xml\",\r\n            regex : \"=\"\r\n        }, {\r\n            include: \"whitespace\"\r\n        }, {\r\n            include: \"string\"\r\n        }, {\r\n            token : \"punctuation.xml-decl.xml\",\r\n            regex : \"\\\\?>\",\r\n            next : \"start\"\r\n        }],\r\n\r\n        doctype : [\r\n            {include : \"whitespace\"},\r\n            {include : \"string\"},\r\n            {token : \"xml-pe.doctype.xml\", regex : \">\", next : \"start\"},\r\n            {token : \"xml-pe.xml\", regex : \"[-_a-zA-Z0-9:]+\"},\r\n            {token : \"punctuation.int-subset\", regex : \"\\\\[\", push : \"int_subset\"}\r\n        ],\r\n\r\n        int_subset : [{\r\n            token : \"text.xml\",\r\n            regex : \"\\\\s+\"\r\n        }, {\r\n            token: \"punctuation.int-subset.xml\",\r\n            regex: \"]\",\r\n            next: \"pop\"\r\n        }, {\r\n            token : [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\r\n            regex : \"(<\\\\!)(\" + tagRegex + \")\",\r\n            push : [{\r\n                token : \"text\",\r\n                regex : \"\\\\s+\"\r\n            },\r\n            {\r\n                token : \"punctuation.markup-decl.xml\",\r\n                regex : \">\",\r\n                next : \"pop\"\r\n            },\r\n            {include : \"string\"}]\r\n        }],\r\n\r\n        cdata : [\r\n            {token : \"string.cdata.xml\", regex : \"\\\\]\\\\]>\", next : \"start\"},\r\n            {token : \"text.xml\", regex : \"\\\\s+\"},\r\n            {token : \"text.xml\", regex : \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"}\r\n        ],\r\n\r\n        comment : [\r\n            {token : \"comment.end.xml\", regex : \"-->\", next : \"start\"},\r\n            {defaultToken : \"comment.xml\"}\r\n        ],\r\n\r\n        reference : [{\r\n            token : \"constant.language.escape.reference.xml\",\r\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\r\n        }],\r\n\r\n        attr_reference : [{\r\n            token : \"constant.language.escape.reference.attribute-value.xml\",\r\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\r\n        }],\r\n\r\n        tag : [{\r\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\r\n            regex : \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\r\n            next: [\r\n                {include : \"attributes\"},\r\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : \"start\"}\r\n            ]\r\n        }],\r\n\r\n        tag_whitespace : [\r\n            {token : \"text.tag-whitespace.xml\", regex : \"\\\\s+\"}\r\n        ],\r\n        whitespace : [\r\n            {token : \"text.whitespace.xml\", regex : \"\\\\s+\"}\r\n        ],\r\n        string: [{\r\n            token : \"string.xml\",\r\n            regex : \"'\",\r\n            push : [\r\n                {token : \"string.xml\", regex: \"'\", next: \"pop\"},\r\n                {defaultToken : \"string.xml\"}\r\n            ]\r\n        }, {\r\n            token : \"string.xml\",\r\n            regex : '\"',\r\n            push : [\r\n                {token : \"string.xml\", regex: '\"', next: \"pop\"},\r\n                {defaultToken : \"string.xml\"}\r\n            ]\r\n        }],\r\n\r\n        attributes: [{\r\n            token : \"entity.other.attribute-name.xml\",\r\n            regex : tagRegex\r\n        }, {\r\n            token : \"keyword.operator.attribute-equals.xml\",\r\n            regex : \"=\"\r\n        }, {\r\n            include: \"tag_whitespace\"\r\n        }, {\r\n            include: \"attribute_value\"\r\n        }],\r\n\r\n        attribute_value: [{\r\n            token : \"string.attribute-value.xml\",\r\n            regex : \"'\",\r\n            push : [\r\n                {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\r\n                {include : \"attr_reference\"},\r\n                {defaultToken : \"string.attribute-value.xml\"}\r\n            ]\r\n        }, {\r\n            token : \"string.attribute-value.xml\",\r\n            regex : '\"',\r\n            push : [\r\n                {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\r\n                {include : \"attr_reference\"},\r\n                {defaultToken : \"string.attribute-value.xml\"}\r\n            ]\r\n        }]\r\n    };\r\n\r\n    if (this.constructor === XmlHighlightRules)\r\n        this.normalizeRules();\r\n};\r\n\r\n\r\n(function() {\r\n\r\n    this.embedTagRules = function(HighlightRules, prefix, tag){\r\n        this.$rules.tag.unshift({\r\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\r\n            regex : \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\r\n            next: [\r\n                {include : \"attributes\"},\r\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : prefix + \"start\"}\r\n            ]\r\n        });\r\n\r\n        this.$rules[tag + \"-end\"] = [\r\n            {include : \"attributes\"},\r\n            {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\",  next: \"start\",\r\n                onMatch : function(value, currentState, stack) {\r\n                    stack.splice(0);\r\n                    return this.token;\r\n            }}\r\n        ];\r\n\r\n        this.embedRules(HighlightRules, prefix, [{\r\n            token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\r\n            regex : \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\r\n            next: tag + \"-end\"\r\n        }, {\r\n            token: \"string.cdata.xml\",\r\n            regex : \"<\\\\!\\\\[CDATA\\\\[\"\r\n        }, {\r\n            token: \"string.cdata.xml\",\r\n            regex : \"\\\\]\\\\]>\"\r\n        }]);\r\n    };\r\n\r\n}).call(TextHighlightRules.prototype);\r\n\r\noop.inherits(XmlHighlightRules, TextHighlightRules);\r\n\r\nexports.XmlHighlightRules = XmlHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/behaviour/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/token_iterator\",\"ace/lib/lang\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar Behaviour = require(\"../behaviour\").Behaviour;\r\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\r\nvar lang = require(\"../../lib/lang\");\r\n\r\nfunction is(token, type) {\r\n    return token && token.type.lastIndexOf(type + \".xml\") > -1;\r\n}\r\n\r\nvar XmlBehaviour = function () {\r\n\r\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\r\n        if (text == '\"' || text == \"'\") {\r\n            var quote = text;\r\n            var selected = session.doc.getTextRange(editor.getSelectionRange());\r\n            if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\r\n                return {\r\n                    text: quote + selected + quote,\r\n                    selection: false\r\n                };\r\n            }\r\n\r\n            var cursor = editor.getCursorPosition();\r\n            var line = session.doc.getLine(cursor.row);\r\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\r\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\r\n            var token = iterator.getCurrentToken();\r\n\r\n            if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\r\n                return {\r\n                    text: \"\",\r\n                    selection: [1, 1]\r\n                };\r\n            }\r\n\r\n            if (!token)\r\n                token = iterator.stepBackward();\r\n\r\n            if (!token)\r\n                return;\r\n\r\n            while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\r\n                token = iterator.stepBackward();\r\n            }\r\n            var rightSpace = !rightChar || rightChar.match(/\\s/);\r\n            if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || (is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?'))) {\r\n                return {\r\n                    text: quote + quote,\r\n                    selection: [1, 1]\r\n                };\r\n            }\r\n        }\r\n    });\r\n\r\n    this.add(\"string_dquotes\", \"deletion\", function(state, action, editor, session, range) {\r\n        var selected = session.doc.getTextRange(range);\r\n        if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\r\n            var line = session.doc.getLine(range.start.row);\r\n            var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\r\n            if (rightChar == selected) {\r\n                range.end.column++;\r\n                return range;\r\n            }\r\n        }\r\n    });\r\n\r\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\r\n        if (text == '>') {\r\n            var position = editor.getSelectionRange().start;\r\n            var iterator = new TokenIterator(session, position.row, position.column);\r\n            var token = iterator.getCurrentToken() || iterator.stepBackward();\r\n            if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\")))\r\n                return;\r\n            if (is(token, \"reference.attribute-value\"))\r\n                return;\r\n            if (is(token, \"attribute-value\")) {\r\n                var tokenEndColumn = iterator.getCurrentTokenColumn() + token.value.length;\r\n                if (position.column < tokenEndColumn)\r\n                    return;\r\n                if (position.column == tokenEndColumn) {\r\n                    var nextToken = iterator.stepForward();\r\n                    if (nextToken && is(nextToken, \"attribute-value\"))\r\n                        return;\r\n                    iterator.stepBackward();\r\n                }\r\n            }\r\n            \r\n            if (/^\\s*>/.test(session.getLine(position.row).slice(position.column)))\r\n                return;\r\n            while (!is(token, \"tag-name\")) {\r\n                token = iterator.stepBackward();\r\n                if (token.value == \"<\") {\r\n                    token = iterator.stepForward();\r\n                    break;\r\n                }\r\n            }\r\n\r\n            var tokenRow = iterator.getCurrentTokenRow();\r\n            var tokenColumn = iterator.getCurrentTokenColumn();\r\n            if (is(iterator.stepBackward(), \"end-tag-open\"))\r\n                return;\r\n\r\n            var element = token.value;\r\n            if (tokenRow == position.row)\r\n                element = element.substring(0, position.column - tokenColumn);\r\n\r\n            if (this.voidElements.hasOwnProperty(element.toLowerCase()))\r\n                 return;\r\n\r\n            return {\r\n               text: \">\" + \"</\" + element + \">\",\r\n               selection: [1, 1]\r\n            };\r\n        }\r\n    });\r\n\r\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\r\n        if (text == \"\\n\") {\r\n            var cursor = editor.getCursorPosition();\r\n            var line = session.getLine(cursor.row);\r\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\r\n            var token = iterator.getCurrentToken();\r\n\r\n            if (token && token.type.indexOf(\"tag-close\") !== -1) {\r\n                if (token.value == \"/>\")\r\n                    return;\r\n                while (token && token.type.indexOf(\"tag-name\") === -1) {\r\n                    token = iterator.stepBackward();\r\n                }\r\n\r\n                if (!token) {\r\n                    return;\r\n                }\r\n\r\n                var tag = token.value;\r\n                var row = iterator.getCurrentTokenRow();\r\n                token = iterator.stepBackward();\r\n                if (!token || token.type.indexOf(\"end-tag\") !== -1) {\r\n                    return;\r\n                }\r\n\r\n                if (this.voidElements && !this.voidElements[tag]) {\r\n                    var nextToken = session.getTokenAt(cursor.row, cursor.column+1);\r\n                    var line = session.getLine(row);\r\n                    var nextIndent = this.$getIndent(line);\r\n                    var indent = nextIndent + session.getTabString();\r\n\r\n                    if (nextToken && nextToken.value === \"</\") {\r\n                        return {\r\n                            text: \"\\n\" + indent + \"\\n\" + nextIndent,\r\n                            selection: [1, indent.length, 1, indent.length]\r\n                        };\r\n                    } else {\r\n                        return {\r\n                            text: \"\\n\" + indent\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n};\r\n\r\noop.inherits(XmlBehaviour, Behaviour);\r\n\r\nexports.XmlBehaviour = XmlBehaviour;\r\n});\r\n\r\nace.define(\"ace/mode/folding/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/range\",\"ace/mode/folding/fold_mode\",\"ace/token_iterator\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar lang = require(\"../../lib/lang\");\r\nvar Range = require(\"../../range\").Range;\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\r\n\r\nvar FoldMode = exports.FoldMode = function(voidElements, optionalEndTags) {\r\n    BaseFoldMode.call(this);\r\n    this.voidElements = voidElements || {};\r\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\r\n    if (optionalEndTags)\r\n        oop.mixin(this.optionalEndTags, optionalEndTags);\r\n    \r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\nvar Tag = function() {\r\n    this.tagName = \"\";\r\n    this.closing = false;\r\n    this.selfClosing = false;\r\n    this.start = {row: 0, column: 0};\r\n    this.end = {row: 0, column: 0};\r\n};\r\n\r\nfunction is(token, type) {\r\n    return token.type.lastIndexOf(type + \".xml\") > -1;\r\n}\r\n\r\n(function() {\r\n\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var tag = this._getFirstTagInLine(session, row);\r\n\r\n        if (!tag)\r\n            return this.getCommentFoldWidget(session, row);\r\n\r\n        if (tag.closing || (!tag.tagName && tag.selfClosing))\r\n            return foldStyle == \"markbeginend\" ? \"end\" : \"\";\r\n\r\n        if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase()))\r\n            return \"\";\r\n\r\n        if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column))\r\n            return \"\";\r\n\r\n        return \"start\";\r\n    };\r\n    \r\n    this.getCommentFoldWidget = function(session, row) {\r\n        if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row)))\r\n            return \"start\";\r\n        return \"\";\r\n    };\r\n    this._getFirstTagInLine = function(session, row) {\r\n        var tokens = session.getTokens(row);\r\n        var tag = new Tag();\r\n\r\n        for (var i = 0; i < tokens.length; i++) {\r\n            var token = tokens[i];\r\n            if (is(token, \"tag-open\")) {\r\n                tag.end.column = tag.start.column + token.value.length;\r\n                tag.closing = is(token, \"end-tag-open\");\r\n                token = tokens[++i];\r\n                if (!token)\r\n                    return null;\r\n                tag.tagName = token.value;\r\n                tag.end.column += token.value.length;\r\n                for (i++; i < tokens.length; i++) {\r\n                    token = tokens[i];\r\n                    tag.end.column += token.value.length;\r\n                    if (is(token, \"tag-close\")) {\r\n                        tag.selfClosing = token.value == '/>';\r\n                        break;\r\n                    }\r\n                }\r\n                return tag;\r\n            } else if (is(token, \"tag-close\")) {\r\n                tag.selfClosing = token.value == '/>';\r\n                return tag;\r\n            }\r\n            tag.start.column += token.value.length;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    this._findEndTagInLine = function(session, row, tagName, startColumn) {\r\n        var tokens = session.getTokens(row);\r\n        var column = 0;\r\n        for (var i = 0; i < tokens.length; i++) {\r\n            var token = tokens[i];\r\n            column += token.value.length;\r\n            if (column < startColumn)\r\n                continue;\r\n            if (is(token, \"end-tag-open\")) {\r\n                token = tokens[i + 1];\r\n                if (token && token.value == tagName)\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    this._readTagForward = function(iterator) {\r\n        var token = iterator.getCurrentToken();\r\n        if (!token)\r\n            return null;\r\n\r\n        var tag = new Tag();\r\n        do {\r\n            if (is(token, \"tag-open\")) {\r\n                tag.closing = is(token, \"end-tag-open\");\r\n                tag.start.row = iterator.getCurrentTokenRow();\r\n                tag.start.column = iterator.getCurrentTokenColumn();\r\n            } else if (is(token, \"tag-name\")) {\r\n                tag.tagName = token.value;\r\n            } else if (is(token, \"tag-close\")) {\r\n                tag.selfClosing = token.value == \"/>\";\r\n                tag.end.row = iterator.getCurrentTokenRow();\r\n                tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\r\n                iterator.stepForward();\r\n                return tag;\r\n            }\r\n        } while(token = iterator.stepForward());\r\n\r\n        return null;\r\n    };\r\n    \r\n    this._readTagBackward = function(iterator) {\r\n        var token = iterator.getCurrentToken();\r\n        if (!token)\r\n            return null;\r\n\r\n        var tag = new Tag();\r\n        do {\r\n            if (is(token, \"tag-open\")) {\r\n                tag.closing = is(token, \"end-tag-open\");\r\n                tag.start.row = iterator.getCurrentTokenRow();\r\n                tag.start.column = iterator.getCurrentTokenColumn();\r\n                iterator.stepBackward();\r\n                return tag;\r\n            } else if (is(token, \"tag-name\")) {\r\n                tag.tagName = token.value;\r\n            } else if (is(token, \"tag-close\")) {\r\n                tag.selfClosing = token.value == \"/>\";\r\n                tag.end.row = iterator.getCurrentTokenRow();\r\n                tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\r\n            }\r\n        } while(token = iterator.stepBackward());\r\n\r\n        return null;\r\n    };\r\n    \r\n    this._pop = function(stack, tag) {\r\n        while (stack.length) {\r\n            \r\n            var top = stack[stack.length-1];\r\n            if (!tag || top.tagName == tag.tagName) {\r\n                return stack.pop();\r\n            }\r\n            else if (this.optionalEndTags.hasOwnProperty(top.tagName)) {\r\n                stack.pop();\r\n                continue;\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    \r\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n        var firstTag = this._getFirstTagInLine(session, row);\r\n        \r\n        if (!firstTag) {\r\n            return this.getCommentFoldWidget(session, row)\r\n                && session.getCommentFoldRange(row, session.getLine(row).length);\r\n        }\r\n        \r\n        var isBackward = firstTag.closing || firstTag.selfClosing;\r\n        var stack = [];\r\n        var tag;\r\n        \r\n        if (!isBackward) {\r\n            var iterator = new TokenIterator(session, row, firstTag.start.column);\r\n            var start = {\r\n                row: row,\r\n                column: firstTag.start.column + firstTag.tagName.length + 2\r\n            };\r\n            if (firstTag.start.row == firstTag.end.row)\r\n                start.column = firstTag.end.column;\r\n            while (tag = this._readTagForward(iterator)) {\r\n                if (tag.selfClosing) {\r\n                    if (!stack.length) {\r\n                        tag.start.column += tag.tagName.length + 2;\r\n                        tag.end.column -= 2;\r\n                        return Range.fromPoints(tag.start, tag.end);\r\n                    } else\r\n                        continue;\r\n                }\r\n                \r\n                if (tag.closing) {\r\n                    this._pop(stack, tag);\r\n                    if (stack.length == 0)\r\n                        return Range.fromPoints(start, tag.start);\r\n                }\r\n                else {\r\n                    stack.push(tag);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var iterator = new TokenIterator(session, row, firstTag.end.column);\r\n            var end = {\r\n                row: row,\r\n                column: firstTag.start.column\r\n            };\r\n            \r\n            while (tag = this._readTagBackward(iterator)) {\r\n                if (tag.selfClosing) {\r\n                    if (!stack.length) {\r\n                        tag.start.column += tag.tagName.length + 2;\r\n                        tag.end.column -= 2;\r\n                        return Range.fromPoints(tag.start, tag.end);\r\n                    } else\r\n                        continue;\r\n                }\r\n                \r\n                if (!tag.closing) {\r\n                    this._pop(stack, tag);\r\n                    if (stack.length == 0) {\r\n                        tag.start.column += tag.tagName.length + 2;\r\n                        if (tag.start.row == tag.end.row && tag.start.column < tag.end.column)\r\n                            tag.start.column = tag.end.column;\r\n                        return Range.fromPoints(tag.start, end);\r\n                    }\r\n                }\r\n                else {\r\n                    stack.push(tag);\r\n                }\r\n            }\r\n        }\r\n        \r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text\",\"ace/mode/xml_highlight_rules\",\"ace/mode/behaviour/xml\",\"ace/mode/folding/xml\",\"ace/worker/worker_client\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar XmlHighlightRules = require(\"./xml_highlight_rules\").XmlHighlightRules;\r\nvar XmlBehaviour = require(\"./behaviour/xml\").XmlBehaviour;\r\nvar XmlFoldMode = require(\"./folding/xml\").FoldMode;\r\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\r\n\r\nvar Mode = function() {\r\n   this.HighlightRules = XmlHighlightRules;\r\n   this.$behaviour = new XmlBehaviour();\r\n   this.foldingRules = new XmlFoldMode();\r\n};\r\n\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.voidElements = lang.arrayToMap([]);\r\n\r\n    this.blockComment = {start: \"<!--\", end: \"-->\"};\r\n\r\n    this.createWorker = function(session) {\r\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/xml_worker\", \"Worker\");\r\n        worker.attachToDocument(session.getDocument());\r\n\r\n        worker.on(\"error\", function(e) {\r\n            session.setAnnotations(e.data);\r\n        });\r\n\r\n        worker.on(\"terminate\", function() {\r\n            session.clearAnnotations();\r\n        });\r\n\r\n        return worker;\r\n    };\r\n    \r\n    this.$id = \"ace/mode/xml\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/xml\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            ", "export default require(\"./node_modules/ace-builds/src-noconflict/mode-xml.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,QAAI,OAAO,gCAA+B,CAAC,WAAU,WAAU,UAAS,eAAc,+BAA+B,GAAG,SAAS,UAAS,UAAS,SAAQ;AAC3J;AAEA,UAAI,MAAM,SAAQ,YAAY;AAC9B,UAAI,qBAAqB,SAAQ,wBAAwB,EAAE;AAE3D,UAAI,oBAAoB,SAAS,WAAW;AACxC,YAAI,WAAW;AAEf,aAAK,SAAS;AAAA,UACV,OAAQ;AAAA,YACJ,EAAC,OAAQ,oBAAoB,OAAQ,mBAAmB,MAAO,QAAO;AAAA,YACtE;AAAA,cACI,OAAQ,CAAC,+BAA+B,yBAAyB;AAAA,cACjE,OAAQ,YAAY,WAAW;AAAA,cAAK,MAAO;AAAA,YAC/C;AAAA,YACA,EAAC,OAAQ,qBAAqB,OAAQ,UAAU,MAAO,UAAS;AAAA,YAChE;AAAA,cACI,OAAQ,CAAC,sBAAsB,oBAAoB;AAAA,cACnD,OAAQ;AAAA,cAA4B,MAAO;AAAA,cAAW,iBAAiB;AAAA,YAC3E;AAAA,YACA,EAAC,SAAU,MAAK;AAAA,YAChB,EAAC,OAAQ,yBAAyB,OAAO,KAAI;AAAA,YAC7C,EAAC,OAAQ,qBAAqB,OAAO,IAAG;AAAA,YACxC,EAAC,SAAU,YAAW;AAAA,YACtB,EAAC,cAAe,WAAU;AAAA,UAC9B;AAAA,UAEA,wBAAyB,CAAC;AAAA,YACtB,OAAQ;AAAA,YACR,OAAQ;AAAA,UACZ,GAAG;AAAA,YACC,OAAQ;AAAA,YACR,OAAQ;AAAA,UACZ,GAAG;AAAA,YACC,SAAS;AAAA,UACb,GAAG;AAAA,YACC,SAAS;AAAA,UACb,GAAG;AAAA,YACC,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,MAAO;AAAA,UACX,CAAC;AAAA,UAED,SAAU;AAAA,YACN,EAAC,SAAU,aAAY;AAAA,YACvB,EAAC,SAAU,SAAQ;AAAA,YACnB,EAAC,OAAQ,sBAAsB,OAAQ,KAAK,MAAO,QAAO;AAAA,YAC1D,EAAC,OAAQ,cAAc,OAAQ,kBAAiB;AAAA,YAChD,EAAC,OAAQ,0BAA0B,OAAQ,OAAO,MAAO,aAAY;AAAA,UACzE;AAAA,UAEA,YAAa,CAAC;AAAA,YACV,OAAQ;AAAA,YACR,OAAQ;AAAA,UACZ,GAAG;AAAA,YACC,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAM;AAAA,UACV,GAAG;AAAA,YACC,OAAQ,CAAC,+BAA+B,yBAAyB;AAAA,YACjE,OAAQ,YAAY,WAAW;AAAA,YAC/B,MAAO;AAAA,cAAC;AAAA,gBACJ,OAAQ;AAAA,gBACR,OAAQ;AAAA,cACZ;AAAA,cACA;AAAA,gBACI,OAAQ;AAAA,gBACR,OAAQ;AAAA,gBACR,MAAO;AAAA,cACX;AAAA,cACA,EAAC,SAAU,SAAQ;AAAA,YAAC;AAAA,UACxB,CAAC;AAAA,UAED,OAAQ;AAAA,YACJ,EAAC,OAAQ,oBAAoB,OAAQ,WAAW,MAAO,QAAO;AAAA,YAC9D,EAAC,OAAQ,YAAY,OAAQ,OAAM;AAAA,YACnC,EAAC,OAAQ,YAAY,OAAQ,0BAAyB;AAAA,UAC1D;AAAA,UAEA,SAAU;AAAA,YACN,EAAC,OAAQ,mBAAmB,OAAQ,OAAO,MAAO,QAAO;AAAA,YACzD,EAAC,cAAe,cAAa;AAAA,UACjC;AAAA,UAEA,WAAY,CAAC;AAAA,YACT,OAAQ;AAAA,YACR,OAAQ;AAAA,UACZ,CAAC;AAAA,UAED,gBAAiB,CAAC;AAAA,YACd,OAAQ;AAAA,YACR,OAAQ;AAAA,UACZ,CAAC;AAAA,UAED,KAAM,CAAC;AAAA,YACH,OAAQ,CAAC,qCAAqC,yCAAyC,uBAAuB;AAAA,YAC9G,OAAQ,qBAAqB,WAAW,QAAQ,WAAW;AAAA,YAC3D,MAAM;AAAA,cACF,EAAC,SAAU,aAAY;AAAA,cACvB,EAAC,OAAQ,sCAAsC,OAAQ,OAAO,MAAO,QAAO;AAAA,YAChF;AAAA,UACJ,CAAC;AAAA,UAED,gBAAiB;AAAA,YACb,EAAC,OAAQ,2BAA2B,OAAQ,OAAM;AAAA,UACtD;AAAA,UACA,YAAa;AAAA,YACT,EAAC,OAAQ,uBAAuB,OAAQ,OAAM;AAAA,UAClD;AAAA,UACA,QAAQ,CAAC;AAAA,YACL,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,MAAO;AAAA,cACH,EAAC,OAAQ,cAAc,OAAO,KAAK,MAAM,MAAK;AAAA,cAC9C,EAAC,cAAe,aAAY;AAAA,YAChC;AAAA,UACJ,GAAG;AAAA,YACC,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,MAAO;AAAA,cACH,EAAC,OAAQ,cAAc,OAAO,KAAK,MAAM,MAAK;AAAA,cAC9C,EAAC,cAAe,aAAY;AAAA,YAChC;AAAA,UACJ,CAAC;AAAA,UAED,YAAY,CAAC;AAAA,YACT,OAAQ;AAAA,YACR,OAAQ;AAAA,UACZ,GAAG;AAAA,YACC,OAAQ;AAAA,YACR,OAAQ;AAAA,UACZ,GAAG;AAAA,YACC,SAAS;AAAA,UACb,GAAG;AAAA,YACC,SAAS;AAAA,UACb,CAAC;AAAA,UAED,iBAAiB,CAAC;AAAA,YACd,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,MAAO;AAAA,cACH,EAAC,OAAQ,8BAA8B,OAAO,KAAK,MAAM,MAAK;AAAA,cAC9D,EAAC,SAAU,iBAAgB;AAAA,cAC3B,EAAC,cAAe,6BAA4B;AAAA,YAChD;AAAA,UACJ,GAAG;AAAA,YACC,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,MAAO;AAAA,cACH,EAAC,OAAQ,8BAA8B,OAAO,KAAK,MAAM,MAAK;AAAA,cAC9D,EAAC,SAAU,iBAAgB;AAAA,cAC3B,EAAC,cAAe,6BAA4B;AAAA,YAChD;AAAA,UACJ,CAAC;AAAA,QACL;AAEA,YAAI,KAAK,gBAAgB;AACrB,eAAK,eAAe;AAAA,MAC5B;AAGA,MAAC,YAAW;AAER,aAAK,gBAAgB,SAAS,gBAAgB,QAAQ,KAAI;AACtD,eAAK,OAAO,IAAI,QAAQ;AAAA,YACpB,OAAQ,CAAC,qCAAqC,cAAc,MAAM,eAAe;AAAA,YACjF,OAAQ,SAAS,MAAM;AAAA,YACvB,MAAM;AAAA,cACF,EAAC,SAAU,aAAY;AAAA,cACvB,EAAC,OAAQ,sCAAsC,OAAQ,OAAO,MAAO,SAAS,QAAO;AAAA,YACzF;AAAA,UACJ,CAAC;AAED,eAAK,OAAO,MAAM,UAAU;AAAA,YACxB,EAAC,SAAU,aAAY;AAAA,YACvB;AAAA,cAAC,OAAQ;AAAA,cAAsC,OAAQ;AAAA,cAAQ,MAAM;AAAA,cACjE,SAAU,SAAS,OAAO,cAAc,OAAO;AAC3C,sBAAM,OAAO,CAAC;AACd,uBAAO,KAAK;AAAA,cACpB;AAAA,YAAC;AAAA,UACL;AAEA,eAAK,WAAW,gBAAgB,QAAQ,CAAC;AAAA,YACrC,OAAO,CAAC,yCAAyC,cAAc,MAAM,eAAe;AAAA,YACpF,OAAQ,UAAU,MAAM;AAAA,YACxB,MAAM,MAAM;AAAA,UAChB,GAAG;AAAA,YACC,OAAO;AAAA,YACP,OAAQ;AAAA,UACZ,GAAG;AAAA,YACC,OAAO;AAAA,YACP,OAAQ;AAAA,UACZ,CAAC,CAAC;AAAA,QACN;AAAA,MAEJ,GAAG,KAAK,mBAAmB,SAAS;AAEpC,UAAI,SAAS,mBAAmB,kBAAkB;AAElD,eAAQ,oBAAoB;AAAA,IAC5B,CAAC;AAED,QAAI,OAAO,0BAAyB,CAAC,WAAU,WAAU,UAAS,eAAc,sBAAqB,sBAAqB,cAAc,GAAG,SAAS,UAAS,UAAS,SAAQ;AAC9K;AAEA,UAAI,MAAM,SAAQ,eAAe;AACjC,UAAI,YAAY,SAAQ,cAAc,EAAE;AACxC,UAAI,gBAAgB,SAAQ,sBAAsB,EAAE;AACpD,UAAI,OAAO,SAAQ,gBAAgB;AAEnC,kBAAY,OAAO,MAAM;AACrB,eAAO,SAAS,MAAM,KAAK,YAAY,OAAO,MAAM,IAAI;AAAA,MAC5D;AAEA,UAAI,eAAe,WAAY;AAE3B,aAAK,IAAI,kBAAkB,aAAa,SAAU,OAAO,QAAQ,QAAQ,SAAS,MAAM;AACpF,cAAI,QAAQ,OAAO,QAAQ,KAAK;AAC5B,gBAAI,QAAQ;AACZ,gBAAI,WAAW,QAAQ,IAAI,aAAa,OAAO,kBAAkB,CAAC;AAClE,gBAAI,aAAa,MAAM,aAAa,OAAO,YAAY,OAAO,OAAO,yBAAyB,GAAG;AAC7F,qBAAO;AAAA,gBACH,MAAM,QAAQ,WAAW;AAAA,gBACzB,WAAW;AAAA,cACf;AAAA,YACJ;AAEA,gBAAI,SAAS,OAAO,kBAAkB;AACtC,gBAAI,OAAO,QAAQ,IAAI,QAAQ,OAAO,GAAG;AACzC,gBAAI,YAAY,KAAK,UAAU,OAAO,QAAQ,OAAO,SAAS,CAAC;AAC/D,gBAAI,WAAW,IAAI,cAAc,SAAS,OAAO,KAAK,OAAO,MAAM;AACnE,gBAAI,QAAQ,SAAS,gBAAgB;AAErC,gBAAI,aAAa,SAAU,IAAG,OAAO,iBAAiB,KAAK,GAAG,OAAO,QAAQ,IAAI;AAC7E,qBAAO;AAAA,gBACH,MAAM;AAAA,gBACN,WAAW,CAAC,GAAG,CAAC;AAAA,cACpB;AAAA,YACJ;AAEA,gBAAI,CAAC;AACD,sBAAQ,SAAS,aAAa;AAElC,gBAAI,CAAC;AACD;AAEJ,mBAAO,GAAG,OAAO,gBAAgB,KAAK,GAAG,OAAO,YAAY,GAAG;AAC3D,sBAAQ,SAAS,aAAa;AAAA,YAClC;AACA,gBAAI,aAAa,CAAC,aAAa,UAAU,MAAM,IAAI;AACnD,gBAAI,GAAG,OAAO,kBAAkB,KAAM,eAAc,aAAa,QAAS,GAAG,OAAO,uBAAuB,KAAM,eAAc,aAAa,MAAO;AAC/I,qBAAO;AAAA,gBACH,MAAM,QAAQ;AAAA,gBACd,WAAW,CAAC,GAAG,CAAC;AAAA,cACpB;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ,CAAC;AAED,aAAK,IAAI,kBAAkB,YAAY,SAAS,OAAO,QAAQ,QAAQ,SAAS,OAAO;AACnF,cAAI,WAAW,QAAQ,IAAI,aAAa,KAAK;AAC7C,cAAI,CAAC,MAAM,YAAY,KAAM,aAAY,OAAO,YAAY,MAAM;AAC9D,gBAAI,OAAO,QAAQ,IAAI,QAAQ,MAAM,MAAM,GAAG;AAC9C,gBAAI,YAAY,KAAK,UAAU,MAAM,MAAM,SAAS,GAAG,MAAM,MAAM,SAAS,CAAC;AAC7E,gBAAI,aAAa,UAAU;AACvB,oBAAM,IAAI;AACV,qBAAO;AAAA,YACX;AAAA,UACJ;AAAA,QACJ,CAAC;AAED,aAAK,IAAI,eAAe,aAAa,SAAU,OAAO,QAAQ,QAAQ,SAAS,MAAM;AACjF,cAAI,QAAQ,KAAK;AACb,gBAAI,WAAW,OAAO,kBAAkB,EAAE;AAC1C,gBAAI,WAAW,IAAI,cAAc,SAAS,SAAS,KAAK,SAAS,MAAM;AACvE,gBAAI,QAAQ,SAAS,gBAAgB,KAAK,SAAS,aAAa;AAChE,gBAAI,CAAC,SAAS,CAAE,IAAG,OAAO,UAAU,KAAK,GAAG,OAAO,gBAAgB,KAAK,GAAG,OAAO,gBAAgB,KAAK,GAAG,OAAO,kBAAkB,KAAK,GAAG,OAAO,iBAAiB;AAC/J;AACJ,gBAAI,GAAG,OAAO,2BAA2B;AACrC;AACJ,gBAAI,GAAG,OAAO,iBAAiB,GAAG;AAC9B,kBAAI,iBAAiB,SAAS,sBAAsB,IAAI,MAAM,MAAM;AACpE,kBAAI,SAAS,SAAS;AAClB;AACJ,kBAAI,SAAS,UAAU,gBAAgB;AACnC,oBAAI,YAAY,SAAS,YAAY;AACrC,oBAAI,aAAa,GAAG,WAAW,iBAAiB;AAC5C;AACJ,yBAAS,aAAa;AAAA,cAC1B;AAAA,YACJ;AAEA,gBAAI,QAAQ,KAAK,QAAQ,QAAQ,SAAS,GAAG,EAAE,MAAM,SAAS,MAAM,CAAC;AACjE;AACJ,mBAAO,CAAC,GAAG,OAAO,UAAU,GAAG;AAC3B,sBAAQ,SAAS,aAAa;AAC9B,kBAAI,MAAM,SAAS,KAAK;AACpB,wBAAQ,SAAS,YAAY;AAC7B;AAAA,cACJ;AAAA,YACJ;AAEA,gBAAI,WAAW,SAAS,mBAAmB;AAC3C,gBAAI,cAAc,SAAS,sBAAsB;AACjD,gBAAI,GAAG,SAAS,aAAa,GAAG,cAAc;AAC1C;AAEJ,gBAAI,UAAU,MAAM;AACpB,gBAAI,YAAY,SAAS;AACrB,wBAAU,QAAQ,UAAU,GAAG,SAAS,SAAS,WAAW;AAEhE,gBAAI,KAAK,aAAa,eAAe,QAAQ,YAAY,CAAC;AACrD;AAEL,mBAAO;AAAA,cACJ,MAAM,QAAa,UAAU;AAAA,cAC7B,WAAW,CAAC,GAAG,CAAC;AAAA,YACnB;AAAA,UACJ;AAAA,QACJ,CAAC;AAED,aAAK,IAAI,cAAc,aAAa,SAAU,OAAO,QAAQ,QAAQ,SAAS,MAAM;AAChF,cAAI,QAAQ,MAAM;AACd,gBAAI,SAAS,OAAO,kBAAkB;AACtC,gBAAI,OAAO,QAAQ,QAAQ,OAAO,GAAG;AACrC,gBAAI,WAAW,IAAI,cAAc,SAAS,OAAO,KAAK,OAAO,MAAM;AACnE,gBAAI,QAAQ,SAAS,gBAAgB;AAErC,gBAAI,SAAS,MAAM,KAAK,QAAQ,WAAW,MAAM,IAAI;AACjD,kBAAI,MAAM,SAAS;AACf;AACJ,qBAAO,SAAS,MAAM,KAAK,QAAQ,UAAU,MAAM,IAAI;AACnD,wBAAQ,SAAS,aAAa;AAAA,cAClC;AAEA,kBAAI,CAAC,OAAO;AACR;AAAA,cACJ;AAEA,kBAAI,MAAM,MAAM;AAChB,kBAAI,MAAM,SAAS,mBAAmB;AACtC,sBAAQ,SAAS,aAAa;AAC9B,kBAAI,CAAC,SAAS,MAAM,KAAK,QAAQ,SAAS,MAAM,IAAI;AAChD;AAAA,cACJ;AAEA,kBAAI,KAAK,gBAAgB,CAAC,KAAK,aAAa,MAAM;AAC9C,oBAAI,YAAY,QAAQ,WAAW,OAAO,KAAK,OAAO,SAAO,CAAC;AAC9D,oBAAI,OAAO,QAAQ,QAAQ,GAAG;AAC9B,oBAAI,aAAa,KAAK,WAAW,IAAI;AACrC,oBAAI,SAAS,aAAa,QAAQ,aAAa;AAE/C,oBAAI,aAAa,UAAU,UAAU,MAAM;AACvC,yBAAO;AAAA,oBACH,MAAM,OAAO,SAAS,OAAO;AAAA,oBAC7B,WAAW,CAAC,GAAG,OAAO,QAAQ,GAAG,OAAO,MAAM;AAAA,kBAClD;AAAA,gBACJ,OAAO;AACH,yBAAO;AAAA,oBACH,MAAM,OAAO;AAAA,kBACjB;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ,CAAC;AAAA,MAEL;AAEA,UAAI,SAAS,cAAc,SAAS;AAEpC,eAAQ,eAAe;AAAA,IACvB,CAAC;AAED,QAAI,OAAO,wBAAuB,CAAC,WAAU,WAAU,UAAS,eAAc,gBAAe,aAAY,8BAA6B,oBAAoB,GAAG,SAAS,UAAS,UAAS,SAAQ;AAChM;AAEA,UAAI,MAAM,SAAQ,eAAe;AACjC,UAAI,OAAO,SAAQ,gBAAgB;AACnC,UAAI,QAAQ,SAAQ,aAAa,EAAE;AACnC,UAAI,eAAe,SAAQ,aAAa,EAAE;AAC1C,UAAI,gBAAgB,SAAQ,sBAAsB,EAAE;AAEpD,UAAI,WAAW,SAAQ,WAAW,SAAS,cAAc,iBAAiB;AACtE,qBAAa,KAAK,IAAI;AACtB,aAAK,eAAe,gBAAgB,CAAC;AACrC,aAAK,kBAAkB,IAAI,MAAM,CAAC,GAAG,KAAK,YAAY;AACtD,YAAI;AACA,cAAI,MAAM,KAAK,iBAAiB,eAAe;AAAA,MAEvD;AACA,UAAI,SAAS,UAAU,YAAY;AAEnC,UAAI,MAAM,WAAW;AACjB,aAAK,UAAU;AACf,aAAK,UAAU;AACf,aAAK,cAAc;AACnB,aAAK,QAAQ,EAAC,KAAK,GAAG,QAAQ,EAAC;AAC/B,aAAK,MAAM,EAAC,KAAK,GAAG,QAAQ,EAAC;AAAA,MACjC;AAEA,kBAAY,OAAO,MAAM;AACrB,eAAO,MAAM,KAAK,YAAY,OAAO,MAAM,IAAI;AAAA,MACnD;AAEA,MAAC,YAAW;AAER,aAAK,gBAAgB,SAAS,SAAS,WAAW,KAAK;AACnD,cAAI,MAAM,KAAK,mBAAmB,SAAS,GAAG;AAE9C,cAAI,CAAC;AACD,mBAAO,KAAK,qBAAqB,SAAS,GAAG;AAEjD,cAAI,IAAI,WAAY,CAAC,IAAI,WAAW,IAAI;AACpC,mBAAO,aAAa,iBAAiB,QAAQ;AAEjD,cAAI,CAAC,IAAI,WAAW,IAAI,eAAe,KAAK,aAAa,eAAe,IAAI,QAAQ,YAAY,CAAC;AAC7F,mBAAO;AAEX,cAAI,KAAK,kBAAkB,SAAS,KAAK,IAAI,SAAS,IAAI,IAAI,MAAM;AAChE,mBAAO;AAEX,iBAAO;AAAA,QACX;AAEA,aAAK,uBAAuB,SAAS,SAAS,KAAK;AAC/C,cAAI,UAAU,KAAK,QAAQ,SAAS,GAAG,CAAC,KAAK,MAAM,KAAK,QAAQ,QAAQ,GAAG,CAAC;AACxE,mBAAO;AACX,iBAAO;AAAA,QACX;AACA,aAAK,qBAAqB,SAAS,SAAS,KAAK;AAC7C,cAAI,SAAS,QAAQ,UAAU,GAAG;AAClC,cAAI,MAAM,IAAI,IAAI;AAElB,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,gBAAI,QAAQ,OAAO;AACnB,gBAAI,GAAG,OAAO,UAAU,GAAG;AACvB,kBAAI,IAAI,SAAS,IAAI,MAAM,SAAS,MAAM,MAAM;AAChD,kBAAI,UAAU,GAAG,OAAO,cAAc;AACtC,sBAAQ,OAAO,EAAE;AACjB,kBAAI,CAAC;AACD,uBAAO;AACX,kBAAI,UAAU,MAAM;AACpB,kBAAI,IAAI,UAAU,MAAM,MAAM;AAC9B,mBAAK,KAAK,IAAI,OAAO,QAAQ,KAAK;AAC9B,wBAAQ,OAAO;AACf,oBAAI,IAAI,UAAU,MAAM,MAAM;AAC9B,oBAAI,GAAG,OAAO,WAAW,GAAG;AACxB,sBAAI,cAAc,MAAM,SAAS;AACjC;AAAA,gBACJ;AAAA,cACJ;AACA,qBAAO;AAAA,YACX,WAAW,GAAG,OAAO,WAAW,GAAG;AAC/B,kBAAI,cAAc,MAAM,SAAS;AACjC,qBAAO;AAAA,YACX;AACA,gBAAI,MAAM,UAAU,MAAM,MAAM;AAAA,UACpC;AAEA,iBAAO;AAAA,QACX;AAEA,aAAK,oBAAoB,SAAS,SAAS,KAAK,SAAS,aAAa;AAClE,cAAI,SAAS,QAAQ,UAAU,GAAG;AAClC,cAAI,SAAS;AACb,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,gBAAI,QAAQ,OAAO;AACnB,sBAAU,MAAM,MAAM;AACtB,gBAAI,SAAS;AACT;AACJ,gBAAI,GAAG,OAAO,cAAc,GAAG;AAC3B,sBAAQ,OAAO,IAAI;AACnB,kBAAI,SAAS,MAAM,SAAS;AACxB,uBAAO;AAAA,YACf;AAAA,UACJ;AACA,iBAAO;AAAA,QACX;AACA,aAAK,kBAAkB,SAAS,UAAU;AACtC,cAAI,QAAQ,SAAS,gBAAgB;AACrC,cAAI,CAAC;AACD,mBAAO;AAEX,cAAI,MAAM,IAAI,IAAI;AAClB,aAAG;AACC,gBAAI,GAAG,OAAO,UAAU,GAAG;AACvB,kBAAI,UAAU,GAAG,OAAO,cAAc;AACtC,kBAAI,MAAM,MAAM,SAAS,mBAAmB;AAC5C,kBAAI,MAAM,SAAS,SAAS,sBAAsB;AAAA,YACtD,WAAW,GAAG,OAAO,UAAU,GAAG;AAC9B,kBAAI,UAAU,MAAM;AAAA,YACxB,WAAW,GAAG,OAAO,WAAW,GAAG;AAC/B,kBAAI,cAAc,MAAM,SAAS;AACjC,kBAAI,IAAI,MAAM,SAAS,mBAAmB;AAC1C,kBAAI,IAAI,SAAS,SAAS,sBAAsB,IAAI,MAAM,MAAM;AAChE,uBAAS,YAAY;AACrB,qBAAO;AAAA,YACX;AAAA,UACJ,SAAQ,QAAQ,SAAS,YAAY;AAErC,iBAAO;AAAA,QACX;AAEA,aAAK,mBAAmB,SAAS,UAAU;AACvC,cAAI,QAAQ,SAAS,gBAAgB;AACrC,cAAI,CAAC;AACD,mBAAO;AAEX,cAAI,MAAM,IAAI,IAAI;AAClB,aAAG;AACC,gBAAI,GAAG,OAAO,UAAU,GAAG;AACvB,kBAAI,UAAU,GAAG,OAAO,cAAc;AACtC,kBAAI,MAAM,MAAM,SAAS,mBAAmB;AAC5C,kBAAI,MAAM,SAAS,SAAS,sBAAsB;AAClD,uBAAS,aAAa;AACtB,qBAAO;AAAA,YACX,WAAW,GAAG,OAAO,UAAU,GAAG;AAC9B,kBAAI,UAAU,MAAM;AAAA,YACxB,WAAW,GAAG,OAAO,WAAW,GAAG;AAC/B,kBAAI,cAAc,MAAM,SAAS;AACjC,kBAAI,IAAI,MAAM,SAAS,mBAAmB;AAC1C,kBAAI,IAAI,SAAS,SAAS,sBAAsB,IAAI,MAAM,MAAM;AAAA,YACpE;AAAA,UACJ,SAAQ,QAAQ,SAAS,aAAa;AAEtC,iBAAO;AAAA,QACX;AAEA,aAAK,OAAO,SAAS,OAAO,KAAK;AAC7B,iBAAO,MAAM,QAAQ;AAEjB,gBAAI,MAAM,MAAM,MAAM,SAAO;AAC7B,gBAAI,CAAC,OAAO,IAAI,WAAW,IAAI,SAAS;AACpC,qBAAO,MAAM,IAAI;AAAA,YACrB,WACS,KAAK,gBAAgB,eAAe,IAAI,OAAO,GAAG;AACvD,oBAAM,IAAI;AACV;AAAA,YACJ,OAAO;AACH,qBAAO;AAAA,YACX;AAAA,UACJ;AAAA,QACJ;AAEA,aAAK,qBAAqB,SAAS,SAAS,WAAW,KAAK;AACxD,cAAI,WAAW,KAAK,mBAAmB,SAAS,GAAG;AAEnD,cAAI,CAAC,UAAU;AACX,mBAAO,KAAK,qBAAqB,SAAS,GAAG,KACtC,QAAQ,oBAAoB,KAAK,QAAQ,QAAQ,GAAG,EAAE,MAAM;AAAA,UACvE;AAEA,cAAI,aAAa,SAAS,WAAW,SAAS;AAC9C,cAAI,QAAQ,CAAC;AACb,cAAI;AAEJ,cAAI,CAAC,YAAY;AACb,gBAAI,WAAW,IAAI,cAAc,SAAS,KAAK,SAAS,MAAM,MAAM;AACpE,gBAAI,QAAQ;AAAA,cACR;AAAA,cACA,QAAQ,SAAS,MAAM,SAAS,SAAS,QAAQ,SAAS;AAAA,YAC9D;AACA,gBAAI,SAAS,MAAM,OAAO,SAAS,IAAI;AACnC,oBAAM,SAAS,SAAS,IAAI;AAChC,mBAAO,MAAM,KAAK,gBAAgB,QAAQ,GAAG;AACzC,kBAAI,IAAI,aAAa;AACjB,oBAAI,CAAC,MAAM,QAAQ;AACf,sBAAI,MAAM,UAAU,IAAI,QAAQ,SAAS;AACzC,sBAAI,IAAI,UAAU;AAClB,yBAAO,MAAM,WAAW,IAAI,OAAO,IAAI,GAAG;AAAA,gBAC9C;AACI;AAAA,cACR;AAEA,kBAAI,IAAI,SAAS;AACb,qBAAK,KAAK,OAAO,GAAG;AACpB,oBAAI,MAAM,UAAU;AAChB,yBAAO,MAAM,WAAW,OAAO,IAAI,KAAK;AAAA,cAChD,OACK;AACD,sBAAM,KAAK,GAAG;AAAA,cAClB;AAAA,YACJ;AAAA,UACJ,OACK;AACD,gBAAI,WAAW,IAAI,cAAc,SAAS,KAAK,SAAS,IAAI,MAAM;AAClE,gBAAI,MAAM;AAAA,cACN;AAAA,cACA,QAAQ,SAAS,MAAM;AAAA,YAC3B;AAEA,mBAAO,MAAM,KAAK,iBAAiB,QAAQ,GAAG;AAC1C,kBAAI,IAAI,aAAa;AACjB,oBAAI,CAAC,MAAM,QAAQ;AACf,sBAAI,MAAM,UAAU,IAAI,QAAQ,SAAS;AACzC,sBAAI,IAAI,UAAU;AAClB,yBAAO,MAAM,WAAW,IAAI,OAAO,IAAI,GAAG;AAAA,gBAC9C;AACI;AAAA,cACR;AAEA,kBAAI,CAAC,IAAI,SAAS;AACd,qBAAK,KAAK,OAAO,GAAG;AACpB,oBAAI,MAAM,UAAU,GAAG;AACnB,sBAAI,MAAM,UAAU,IAAI,QAAQ,SAAS;AACzC,sBAAI,IAAI,MAAM,OAAO,IAAI,IAAI,OAAO,IAAI,MAAM,SAAS,IAAI,IAAI;AAC3D,wBAAI,MAAM,SAAS,IAAI,IAAI;AAC/B,yBAAO,MAAM,WAAW,IAAI,OAAO,GAAG;AAAA,gBAC1C;AAAA,cACJ,OACK;AACD,sBAAM,KAAK,GAAG;AAAA,cAClB;AAAA,YACJ;AAAA,UACJ;AAAA,QAEJ;AAAA,MAEJ,GAAG,KAAK,SAAS,SAAS;AAAA,IAE1B,CAAC;AAED,QAAI,OAAO,gBAAe,CAAC,WAAU,WAAU,UAAS,eAAc,gBAAe,iBAAgB,gCAA+B,0BAAyB,wBAAuB,0BAA0B,GAAG,SAAS,UAAS,UAAS,SAAQ;AACpP;AAEA,UAAI,MAAM,SAAQ,YAAY;AAC9B,UAAI,OAAO,SAAQ,aAAa;AAChC,UAAI,WAAW,SAAQ,QAAQ,EAAE;AACjC,UAAI,oBAAoB,SAAQ,uBAAuB,EAAE;AACzD,UAAI,eAAe,SAAQ,iBAAiB,EAAE;AAC9C,UAAI,cAAc,SAAQ,eAAe,EAAE;AAC3C,UAAI,eAAe,SAAQ,yBAAyB,EAAE;AAEtD,UAAI,OAAO,WAAW;AACnB,aAAK,iBAAiB;AACtB,aAAK,aAAa,IAAI,aAAa;AACnC,aAAK,eAAe,IAAI,YAAY;AAAA,MACvC;AAEA,UAAI,SAAS,MAAM,QAAQ;AAE3B,MAAC,YAAW;AAER,aAAK,eAAe,KAAK,WAAW,CAAC,CAAC;AAEtC,aAAK,eAAe,EAAC,OAAO,QAAQ,KAAK,MAAK;AAE9C,aAAK,eAAe,SAAS,SAAS;AAClC,cAAI,SAAS,IAAI,aAAa,CAAC,KAAK,GAAG,uBAAuB,QAAQ;AACtE,iBAAO,iBAAiB,QAAQ,YAAY,CAAC;AAE7C,iBAAO,GAAG,SAAS,SAAS,GAAG;AAC3B,oBAAQ,eAAe,EAAE,IAAI;AAAA,UACjC,CAAC;AAED,iBAAO,GAAG,aAAa,WAAW;AAC9B,oBAAQ,iBAAiB;AAAA,UAC7B,CAAC;AAED,iBAAO;AAAA,QACX;AAEA,aAAK,MAAM;AAAA,MACf,GAAG,KAAK,KAAK,SAAS;AAEtB,eAAQ,OAAO;AAAA,IACf,CAAC;AAAkB,IAAC,YAAW;AACX,UAAI,QAAQ,CAAC,cAAc,GAAG,SAAS,GAAG;AACtC,YAAI,OAAO,UAAU,YAAY,OAAO,WAAW,YAAY,QAAQ;AACnE,iBAAO,UAAU;AAAA,QACrB;AAAA,MACJ,CAAC;AAAA,IACL,GAAG;AAAA;AAAA;;;AClqBnB,IAAO,gDAAQ;",
  "names": []
}
