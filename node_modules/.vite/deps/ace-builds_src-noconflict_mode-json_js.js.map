{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-json.js", "dep:ace-builds_src-noconflict_mode-json_js"],
  "sourcesContent": ["ace.define(\"ace/mode/json_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar JsonHighlightRules = function() {\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"variable\", // single line\r\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : '\"',\r\n                next  : \"string\"\r\n            }, {\r\n                token : \"constant.numeric\", // hex\r\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\r\n            }, {\r\n                token : \"constant.numeric\", // float\r\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\r\n            }, {\r\n                token : \"constant.language.boolean\",\r\n                regex : \"(?:true|false)\\\\b\"\r\n            }, {\r\n                token : \"text\", // single quoted strings are not allowed\r\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n            }, {\r\n                token : \"comment\", // comments are not allowed, but who cares?\r\n                regex : \"\\\\/\\\\/.*$\"\r\n            }, {\r\n                token : \"comment.start\", // comments are not allowed, but who cares?\r\n                regex : \"\\\\/\\\\*\",\r\n                next  : \"comment\"\r\n            }, {\r\n                token : \"paren.lparen\",\r\n                regex : \"[[({]\"\r\n            }, {\r\n                token : \"paren.rparen\",\r\n                regex : \"[\\\\])}]\"\r\n            }, {\r\n                token : \"punctuation.operator\",\r\n                regex : /[,]/\r\n            }, {\r\n                token : \"text\",\r\n                regex : \"\\\\s+\"\r\n            }\r\n        ],\r\n        \"string\" : [\r\n            {\r\n                token : \"constant.language.escape\",\r\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\r\n            }, {\r\n                token : \"string\",\r\n                regex : '\"|$',\r\n                next  : \"start\"\r\n            }, {\r\n                defaultToken : \"string\"\r\n            }\r\n        ],\r\n        \"comment\" : [\r\n            {\r\n                token : \"comment.end\", // comments are not allowed, but who cares?\r\n                regex : \"\\\\*\\\\/\",\r\n                next  : \"start\"\r\n            }, {\r\n                defaultToken: \"comment\"\r\n            }\r\n        ]\r\n    };\r\n    \r\n};\r\n\r\noop.inherits(JsonHighlightRules, TextHighlightRules);\r\n\r\nexports.JsonHighlightRules = JsonHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Range = require(\"../range\").Range;\r\n\r\nvar MatchingBraceOutdent = function() {};\r\n\r\n(function() {\r\n\r\n    this.checkOutdent = function(line, input) {\r\n        if (! /^\\s+$/.test(line))\r\n            return false;\r\n\r\n        return /^\\s*\\}/.test(input);\r\n    };\r\n\r\n    this.autoOutdent = function(doc, row) {\r\n        var line = doc.getLine(row);\r\n        var match = line.match(/^(\\s*\\})/);\r\n\r\n        if (!match) return 0;\r\n\r\n        var column = match[1].length;\r\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\r\n\r\n        if (!openBracePos || openBracePos.row == row) return 0;\r\n\r\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\r\n        doc.replace(new Range(row, 0, row, column-1), indent);\r\n    };\r\n\r\n    this.$getIndent = function(line) {\r\n        return line.match(/^\\s*/)[0];\r\n    };\r\n\r\n}).call(MatchingBraceOutdent.prototype);\r\n\r\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\r\n});\r\n\r\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar Range = require(\"../../range\").Range;\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\n\r\nvar FoldMode = exports.FoldMode = function(commentRegex) {\r\n    if (commentRegex) {\r\n        this.foldingStartMarker = new RegExp(\r\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\r\n        );\r\n        this.foldingStopMarker = new RegExp(\r\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\r\n        );\r\n    }\r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n    \r\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\r\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\r\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\r\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\r\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\r\n    this._getFoldWidgetBase = this.getFoldWidget;\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n    \r\n        if (this.singleLineBlockCommentRe.test(line)) {\r\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\r\n                return \"\";\r\n        }\r\n    \r\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\r\n    \r\n        if (!fw && this.startRegionRe.test(line))\r\n            return \"start\"; // lineCommentRegionStart\r\n    \r\n        return fw;\r\n    };\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\r\n        var line = session.getLine(row);\r\n        \r\n        if (this.startRegionRe.test(line))\r\n            return this.getCommentRegionBlock(session, line, row);\r\n        \r\n        var match = line.match(this.foldingStartMarker);\r\n        if (match) {\r\n            var i = match.index;\r\n\r\n            if (match[1])\r\n                return this.openingBracketBlock(session, match[1], row, i);\r\n                \r\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\r\n            \r\n            if (range && !range.isMultiLine()) {\r\n                if (forceMultiline) {\r\n                    range = this.getSectionRange(session, row);\r\n                } else if (foldStyle != \"all\")\r\n                    range = null;\r\n            }\r\n            \r\n            return range;\r\n        }\r\n\r\n        if (foldStyle === \"markbegin\")\r\n            return;\r\n\r\n        var match = line.match(this.foldingStopMarker);\r\n        if (match) {\r\n            var i = match.index + match[0].length;\r\n\r\n            if (match[1])\r\n                return this.closingBracketBlock(session, match[1], row, i);\r\n\r\n            return session.getCommentFoldRange(row, i, -1);\r\n        }\r\n    };\r\n    \r\n    this.getSectionRange = function(session, row) {\r\n        var line = session.getLine(row);\r\n        var startIndent = line.search(/\\S/);\r\n        var startRow = row;\r\n        var startColumn = line.length;\r\n        row = row + 1;\r\n        var endRow = row;\r\n        var maxRow = session.getLength();\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var indent = line.search(/\\S/);\r\n            if (indent === -1)\r\n                continue;\r\n            if  (startIndent > indent)\r\n                break;\r\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\r\n            \r\n            if (subRange) {\r\n                if (subRange.start.row <= startRow) {\r\n                    break;\r\n                } else if (subRange.isMultiLine()) {\r\n                    row = subRange.end.row;\r\n                } else if (startIndent == indent) {\r\n                    break;\r\n                }\r\n            }\r\n            endRow = row;\r\n        }\r\n        \r\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\r\n    };\r\n    this.getCommentRegionBlock = function(session, line, row) {\r\n        var startColumn = line.search(/\\s*$/);\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        \r\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\r\n        var depth = 1;\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var m = re.exec(line);\r\n            if (!m) continue;\r\n            if (m[1]) depth--;\r\n            else depth++;\r\n\r\n            if (!depth) break;\r\n        }\r\n\r\n        var endRow = row;\r\n        if (endRow > startRow) {\r\n            return new Range(startRow, startColumn, endRow, line.length);\r\n        }\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/json\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/json_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\",\"ace/worker/worker_client\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar HighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\r\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\r\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\r\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = HighlightRules;\r\n    this.$outdent = new MatchingBraceOutdent();\r\n    this.$behaviour = new CstyleBehaviour();\r\n    this.foldingRules = new CStyleFoldMode();\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.lineCommentStart = \"//\";\r\n    this.blockComment = {start: \"/*\", end: \"*/\"};\r\n    \r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        }\r\n\r\n        return indent;\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n\r\n    this.autoOutdent = function(state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n\r\n    this.createWorker = function(session) {\r\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/json_worker\", \"JsonWorker\");\r\n        worker.attachToDocument(session.getDocument());\r\n\r\n        worker.on(\"annotate\", function(e) {\r\n            session.setAnnotations(e.data);\r\n        });\r\n\r\n        worker.on(\"terminate\", function() {\r\n            session.clearAnnotations();\r\n        });\r\n\r\n        return worker;\r\n    };\r\n\r\n\r\n    this.$id = \"ace/mode/json\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/json\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            ", "export default require(\"./node_modules/ace-builds/src-noconflict/mode-json.js\");"],
  "mappings": "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",
  "names": []
}
